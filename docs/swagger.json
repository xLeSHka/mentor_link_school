{
    "swagger": "2.0",
    "info": {
        "description": "GetMentor API docs",
        "title": "GetMentor API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "version": "1.0"
    },
    "host": "localhost",
    "basePath": "/",
    "paths": {
        "/api/groups/{groupID}/edit": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Редактирование организации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.ReqEditGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/inviteCode": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Обновить код приглашения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.RespUpdateCode"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/members": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Список участников организации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/groupsRoute.RespGetMember"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/members/{userID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "получить роли юзера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.RespGetRoles"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого юзера",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/members/{userID}/role": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Добавить роль юзеру",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.ReqUpdateRole"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого юзера",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Удалить роль юзеру",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.ReqUpdateRole"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого юзера",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/mentors/requests": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentors"
                ],
                "summary": "Получить входящие запросы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mentorsRoute.RespGetRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Ошибка доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого запроса",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentors"
                ],
                "summary": "Изменить состояние заявки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mentorsRoute.ReqUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого запроса",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/mentors/students": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentors"
                ],
                "summary": "Получить моих учеников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mentorsRoute.RespGetMyStudent"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Ошибка доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого пользователя",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/stat": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Получить статистику организации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.RespStat"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/students/availableMentors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Получение доступных менторов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/studentsRoute.RespGetMentor"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/students/mentors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Получение моих менторов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/studentsRoute.RespGetMyMentor"
                            }
                        }
                    },
                    "400": {
                        "description": "Невалидный запрос",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/students/requests": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Получить список моих запросов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/studentsRoute.RespGetHelp"
                            }
                        }
                    },
                    "400": {
                        "description": "Невалидный запрос",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/students/{userID}/requests": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Кинуть запрос ментору",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studentsRoute.ReqCreateHelp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/groups/{groupID}/uploadAvatar": {
            "post": {
                "description": "Загрузка аватарки. Возвращает ссылку на аватарку, которая действует 7 дней",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Загрузка аватарки",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Изображение для загрузки",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.RespUploadAvatarDto"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Нет прав доступа",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/auth/login": {
            "post": {
                "description": "Аунтефикация юзера. Возвращает токен, который в дальнейшем нужно передавать в заголовке \"Authorization\" в формате \"Bearer \u003cтокен\u003e\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Аунтефикация",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usersRoute.ReqLoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.RespLoginDto"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/auth/register": {
            "post": {
                "description": "регистрация юзера. Возвращает токен, который в дальнейшем нужно передавать в заголовке \"Authorization\" в формате \"Bearer \u003cтокен\u003e\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "регистрация",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usersRoute.ReqRegisterDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.RespRegisterDto"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email уже зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/groups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получение организаций пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/usersRoute.ResGetGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Невалидный запрос",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/groups/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Создание организации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.ReqCreateGroupDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupsRoute.RespCreateGroup"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/join/{code}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Присоединиться к организации по коду",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invite code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.RespJoinGroup"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/profile/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получение профиля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.ResGetProfile"
                        }
                    },
                    "400": {
                        "description": "Невалидный запрос",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/profile/edit": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Редактирование профиля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usersRoute.ReqEditUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Нет такого пользователя",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email уже зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/profile/{profileID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получение чужого профиля",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "profileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.RespOtherProfile"
                        }
                    },
                    "400": {
                        "description": "Невалидный запрос",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/users/uploadAvatar": {
            "post": {
                "description": "Загрузка аватарки. Возвращает ссылку на аватарку, которая действует 7 дней",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Загрузка аватарки для пользователя",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Изображение для загрузки",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersRoute.RespUploadAvatarDto"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Что-то пошло не так",
                        "schema": {
                            "$ref": "#/definitions/httpError.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "groupsRoute.ReqCreateGroupDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "groupsRoute.ReqEditGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "groupsRoute.ReqUpdateRole": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "groupsRoute.RespCreateGroup": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "invite_code": {
                    "type": "string"
                }
            }
        },
        "groupsRoute.RespGetMember": {
            "type": "object",
            "required": [
                "name",
                "roles",
                "user_id"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "groupsRoute.RespGetRoles": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "groupsRoute.RespStat": {
            "type": "object",
            "properties": {
                "accepted_request_count": {
                    "type": "integer"
                },
                "conversion": {
                    "type": "number"
                },
                "help_request_count": {
                    "type": "integer"
                },
                "mentors_count": {
                    "type": "integer"
                },
                "rejected_request_count": {
                    "type": "integer"
                },
                "students_count": {
                    "type": "integer"
                }
            }
        },
        "groupsRoute.RespUpdateCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "groupsRoute.RespUploadAvatarDto": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "httpError.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "mentorsRoute.ReqUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "mentorsRoute.RespGetMyStudent": {
            "type": "object",
            "required": [
                "name",
                "student_id"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                }
            }
        },
        "mentorsRoute.RespGetRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "student_bio": {
                    "type": "string"
                },
                "student_telegram": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "studentsRoute.ReqCreateHelp": {
            "type": "object",
            "required": [
                "goal"
            ],
            "properties": {
                "goal": {
                    "type": "string"
                }
            }
        },
        "studentsRoute.RespGetHelp": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "goal": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mentor_bio": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "string"
                },
                "mentor_name": {
                    "type": "string"
                },
                "mentor_telegram": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "studentsRoute.RespGetMentor": {
            "type": "object",
            "required": [
                "mentor_id",
                "name"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                }
            }
        },
        "studentsRoute.RespGetMyMentor": {
            "type": "object",
            "required": [
                "mentor_id",
                "name"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "mentor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                }
            }
        },
        "usersRoute.ReqEditUser": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                },
                "telegram": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                }
            }
        },
        "usersRoute.ReqLoginDto": {
            "type": "object",
            "required": [
                "password",
                "telegram"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "telegram": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                }
            }
        },
        "usersRoute.ReqRegisterDto": {
            "type": "object",
            "required": [
                "name",
                "password",
                "telegram"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 8
                },
                "telegram": {
                    "type": "string",
                    "maxLength": 120,
                    "minLength": 1
                }
            }
        },
        "usersRoute.ResGetGroup": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "invite_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "usersRoute.ResGetProfile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                }
            }
        },
        "usersRoute.RespJoinGroup": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "usersRoute.RespLoginDto": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "usersRoute.RespOtherProfile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                }
            }
        },
        "usersRoute.RespRegisterDto": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "usersRoute.RespUploadAvatarDto": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}