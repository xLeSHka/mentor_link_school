upstream backend {
    server backend1:8080;
    server backend2:8080;
}
server {
    listen 80;
    listen [::]:80;

    server_name mentorlink.com www.mentorlink.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://mentorlink.com$request_uri;
    }

}
server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;
    server_name mentorlink.com;
    ssl_certificate     /etc/letsencrypt/live/mentorlink.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mentorlink.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    location /imagebucket/ {
        proxy_pass http://minio:9000/imagebucket/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }
    location /ws/ {
        proxy_pass http://backendws:8080/ws;  # Адрес вашего WebSocket-сервера
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}