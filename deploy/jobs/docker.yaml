.ssh:
  image: kroniak/ssh-client:3.19
  variables:
    SSH_HOST: "192.168.0.1"
    SSH_USER: "ubuntu"
    SSH_ADDRESS: $SSH_USER@$SSH_HOST
  before_script:
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config && chmod 600 ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - ssh-agent sh -c "ssh-add ~/.ssh/id_rsa"
    - ssh-keyscan -H "$SSH_HOST"
    - apk add gettext


.docker_run:
  extends: .ssh
  stage: deploy
  variables:
    OPT_DOCKER: ""
    DOCKERFILE_PATH: Dockerfile
    IMAGE_TAG: $CI_COMMIT_SHA
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    DOCKER_DRIVER: overlay2
    PRUNE_COMMAND: "docker system prune -f -a"
    CONTAINER_NAME_SUFFIX: ""
#  before_script:
#    # install envsubst

#    - apk add gettext
  script:
    # create the new docker-compose.yml
    - envsubst < docker-compose.yml > docker-compose.yml
    - AUTH_COMMAND="echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin";
    - ssh $SSH_ADDRESS "$AUTH_COMMAND"
    - ssh $SSH_ADDRESS "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - ssh $SSH_ADDRESS "docker stop $CI_PROJECT_NAME || true"
    - ssh $SSH_ADDRESS "docker rm $CI_PROJECT_NAME || true"
    - scp docker-compose.yml $SSH_ADDRESS:~/
    - ssh $SSH_ADDRESS "cd ~/;
        docker compose up -d"
#    - ssh $SSH_ADDRESS "$PRUNE_COMMAND"
#
#    script:
#      # create the new docker-compose.yml
#      - envsubst < docker-compose.yml > docker-compose.yml
#      # start ssh-agent and import ssh private key
#      - eval `ssh-agent`
#      - ssh-add <(echo "$ENV_PRIVATE_KEY_BASE64")
#      # add server to list of known hosts
#      - mkdir -p ~/.ssh
#      - chmod 700 ~/.ssh
#      - touch ~/.ssh/known_hosts
#      - chmod 600 ~/.ssh/known_hosts
#      - echo $SSH_HOST_KEY >> ~/.ssh/known_hosts
#      # upload docker-compose to the server
#      - scp docker-compose.yml <project@server>:/home/project/
#      # docker login and restart services
#      - ssh <project@sserver> "cd /home/project;
#        docker login -u $CI_REGISTRY_USER
#        -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
#        docker compose up -d"
